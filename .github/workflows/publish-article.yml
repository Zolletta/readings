name: 'Publish an article'
run-name: ${{ github.actor }} is publishing an article
on:
  workflow_dispatch:
    inputs:
      article_name:
        description: "Article to publish"
        required: true
        default: "programmers-brain.md"
      publish_medium:
        description: "Publish to Medium?"
        required: true
        default: "true"

jobs:

  publishing-a-new-article:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Prepare markdown
        id: prepare_markdown
        run: |
          echo ARTICLE_NAME=${{ github.event.inputs.article_name }} >> $GITHUB_ENV
          mkdir /home/runner/work/readings/readings/output
          cat $ARTICLE_NAME automated.md > /home/runner/work/readings/readings/output/article.md
          chmod -R 777 /home/runner/work/readings/readings/output 
          echo "markdown=output/article.md" > $GITHUB_OUTPUT

      - uses: docker://pandoc/core:2.9
        id: convert
        name: Converting article markdown to HTML
        with:
          args: --input=/home/runner/work/readings/readings/output/article.md --output=/home/runner/work/readings/readings/output/article.html

      #- uses: actions/upload-artifact@v3
      #  name: Uploading HTML artifacts
      #  with:
      #    name: output
      #    path: output

      - if: github.event.inputs.publish_medium == 'true'
        name: Publish to Medium
        run: |
          
          HTML_TITLE=`head -1 /home/runner/work/readings/readings/output/article.html`
          HTML_CONTENTS=`cat /home/runner/work/readings/readings/output/article.html`
          
          echo "The article to be published on Medium is: $ARTICLE_NAME"
          echo "The article title is: $HTML_TITLE"

          JSON="{
            \"title\": \"title\",
            \"content\": \"<p>Cache invalidation</p><p>Naming things</p>\",
            \"canonicalUrl\": \"https://github.com/zolletta/readings/${ARTICLE_NAME}\",
            \"publishStatus\": \"public\",
            \"notifyFollowers\": false
          }"

          POST_URL=https://api.medium.com/v1/users/$MEDIUM_USER_ID/posts
          curl -d "$JSON" -H "Content-Type: application/json" -H "Authorization: Bearer $MEDIUM_SECRET" -X POST $POST_URL 

        env:
          MEDIUM_USER_ID: ${{ secrets.MEDIUM_USER_ID }}
          MEDIUM_SECRET: ${{ secrets.MEDIUM_SECRET }}
