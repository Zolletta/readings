name: 'Publish a new article'
run-name: ${{ github.actor }} is publishing an article
on:
  workflow_dispatch:
    inputs:
      article_name:
        description: "Article to publish"
        required: true
        default: "programmers-brain.md"
      publish_medium:
        description: "Publish to Medium?"
        required: true
        default: "true"

jobs:

  publishing-a-new-article:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Pandoc
        uses: nikeee/setup-pandoc@v1
        with:
          pandoc-version: '2.9'

      - name: Prepare markdown
        run: |
          MARKDOWN_CONTENTS=`cat ${{ github.event.inputs.article_name }} automated.md`
          MARKDOWN_TITLE=`head -1 ${{ github.event.inputs.article_name }}`
          echo MARKDOWN_TITLE=${MARKDOWN_TITLE} >> $GITHUB_ENV
          echo MARKDOWN_CONTENTS=${MARKDOWN_CONTENTS} > $GITHUB_ENV
          echo $MARKDOWN_TITLE
          echo ${{ github.event.inputs.article_name }}

      - uses: r-lib/actions/setup-pandoc@v2
        name: Convert to HTML
        run: |
            HTML_TITLE=`echo $MARKDOWN_TITLE | pandoc -t html`
            HTML_CONTENTS=`echo $MARKDOWN_CONTENTS | pandoc -t html`
            echo HTML_TITLE=`echo $MARKDOWN_TITLE | pandoc -t html` > $GITHUB_ENV
            echo HTML_CONTENTS=`echo $MARKDOWN_CONTENTS | pandoc -t html` > $GITHUB_ENV

      #- uses: docker://pandoc/core:2.9
      #  with:
      #    args: ${{ steps.prepare_markdown.outputs.markdown }} --output=/home/runner/work/readings/readings/output/article.html

      - if: github.event.inputs.publish_medium == 'true'
        name: Publish to Medium
        run: |
          
          echo "The article to be published on Medium is: ${{ github.event.inputs.article_name }}"
          echo "The article title is: $HTML_TITLE"

          JSON="{
            \"title\": \"$HTML_TITLE\",
            \"content\": \"$HTML_CONTENTS\",
            \"canonicalUrl\": \"https://github.com/zolletta/readings/${{ github.event.inputs.article_name }}\",
            \"publishStatus\": \"public\",
            \"notifyFollowers\": false
          }"

          POST_URL=https://api.medium.com/v1/users/$MEDIUM_USER_ID/posts
          curl -d "$JSON" -H "Content-Type: application/json" -H "Authorization: Bearer $MEDIUM_SECRET" -X POST $POST_URL 

        env:
          MEDIUM_USER_ID: ${{ secrets.MEDIUM_USER_ID }}
          MEDIUM_SECRET: ${{ secrets.MEDIUM_SECRET }}
